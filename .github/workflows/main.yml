name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
  PYTHON_VERSION: '3.x'
  PATH_TO_LINT: 'src tests'
  PROJECT_NAME: 'otus-source-code-lesson'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-lint.txt
        pip install -r requirements-test.txt
        pip install -r requirements.txt
    - name: Run black
      run: black --check ${{ env.PATH_TO_LINT }}
    - name: Run isort
      run: isort --profile black --check ${{ env.PATH_TO_LINT }}
    - name: Run flake8
      run: flake8 ${{ env.PATH_TO_LINT }}
    - name: Run pylint
      run: pylint ${{ env.PATH_TO_LINT }}

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -r requirements.txt
    - name: Run tests
      run: pytest --cov=src tests

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Build production environment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_HOST }}
        username: ${{ env.SERVER_USER }}
        key: ${{ env.SERVER_SSH_PRIVATE_KEY }}
        script: |
          mkdir -p ${{ env.PROJECT_NAME }} | true
          cd ${{ env.PROJECT_NAME }}
          # check venv
          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          # install dependencies
          .venv/bin/python3 pip install -r requirements.txt
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SERVER_HOST }}
        username: ${{ env.SERVER_USER }}
        key: ${{ env.SERVER_SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.PROJECT_NAME }}
          git pull origin main
          source .venv/bin/activate
          streamlit run src/app.py --server.port 8501